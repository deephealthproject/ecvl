include(CMakeFindDependencyMacro)

SET(ECVL_WITH_DICOM @ECVL_WITH_DICOM@)
SET(ECVL_WITH_OPENGL @ECVL_WITH_OPENGL@)
SET(ECVL_BUILD_EDDL @ECVL_BUILD_EDDL@)
SET(ECVL_BUILD_GUI @ECVL_BUILD_GUI@)
SET(ECVL_DATASET @ECVL_DATASET@)

set(OpenCV_DIR "@OpenCV_DIR@")
# ECVL - European Computer Vision Library
# Version: 0.1
# copyright (c) 2020, Universit√† degli Studi di Modena e Reggio Emilia (UNIMORE), AImageLab
# Authors: 
#    Costantino Grana (costantino.grana@unimore.it)
#    Federico Bolelli (federico.bolelli@unimore.it)
#    Michele Cancilla (michele.cancilla@unimore.it)
#    Laura Canalini (laura.canalini@unimore.it)
#    Stefano Allegretti (stefano.allegretti@unimore.it)
# All rights reserved.

find_dependency(OpenCV)

#set(NIFTI_DIR "@ECVL_CONFIG_INSTALL_PATH@")
#find_dependency(NIFTI)

if(${ECVL_WITH_DICOM})
    if(WIN32 AND NOT CYGWIN)
        set(DCMTK_DIR "@ECVL_CONFIG_INSTALL_PATH@/CMake")
    else()
        set(DCMTK_DIR "@ECVL_CONFIG_INSTALL_PATH@/lib/cmake/dcmtk")
    endif()
    find_dependency(DCMTK)
endif()

if (${ECVL_BUILD_EDDL})
    set(eddl_DIR "@eddl_DIR@")
    find_dependency(eddl)
endif()

if (${ECVL_BUILD_GUI})
    set(wxWidgets_ROOT_DIR "@wxWidgets_ROOT_DIR@")
    find_dependency(wxWidgets)
    if (${ECVL_WITH_OPENGL})
        set(glm_DIR "@ECVL_CONFIG_INSTALL_PATH@/lib/cmake/glm")
        find_dependency(glm)
        find_dependency(OpenGL)
    endif()
endif()

if (${ECVL_DATASET})
    if(WIN32 AND NOT CYGWIN)
        set(yaml-cpp_DIR "@ECVL_CONFIG_INSTALL_PATH@/CMake")
    else()
        set(yaml-cpp_DIR "@ECVL_CONFIG_INSTALL_PATH@/lib/cmake/yaml-cpp")
    endif()
    find_dependency(yaml-cpp)
endif()

include("@ECVL_CONFIG_INSTALL_PATH@/ecvlTargets.cmake")

foreach(COMPONENT ${ECVL_FIND_COMPONENTS})
    string(TOUPPER ${COMPONENT} UPPER_COMPONENT)
    if(TARGET "ECVL_${UPPER_COMPONENT}")
    else()
        message(WARNING "ECVL component ${COMPONENT} not found.")
        set(ECVL_FOUND OFF)
    endif()
endforeach()

SET(ECVL_LIBRARIES @ECVL_MODULES@)
SET(ECVL_INCLUDE_DIR "@ECVL_CONFIG_INSTALL_PATH@/include")