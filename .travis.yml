language: cpp
env:
  global:
    - PROC=2
    - DEPS_BUILD_DIR="${HOME}/deps"
    - DEPS_INSTALL_DIR="${HOME}/install"
    - BUILD_TYPE=Release
    - OPENCV_VERSION="3.4.11"
    - EDDL_VERSION="0.7.0"
jobs:
  # fast_finish: true
  include:
    - os: linux
      dist: bionic # Ubuntu 18.04
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env: MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-10
      env: MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-5.0
      env: MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-6.0
      env: MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-7
      env: MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-8
      env: MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-9
      env: MATRIX_EVAL="CC=clang-9 && CXX=clang++-9"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-10
      env: MATRIX_EVAL="CC=clang-10 && CXX=clang++-10"
    - os: osx
      osx_image: xcode11.4
      env: MATRIX_EVAL="CC=clang && CXX=clang++"

before_install:
  - eval "${MATRIX_EVAL}"
  - g++ --version
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      export TRAVIS_OS=Linux
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      export TRAVIS_OS=Darwin
    elif [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then
      export TRAVIS_OS=Windows
    fi

install:
  - chmod ugo+x tools/travis/cmake.sh
  - chmod ugo+x tools/travis/opencv.sh
  - chmod ugo+x tools/travis/eddl.sh

  - |
    if [[ "$TRAVIS_OS" == "Linux" ]]; then
      sudo apt-get install -y openslide-tools
    elif [[ "$TRAVIS_OS" == "Darwin" ]]; then
      brew install openslide
    fi
  - source tools/travis/cmake.sh
  - cmake --version
  - source tools/travis/opencv.sh
  - source tools/travis/eddl.sh

before_script:
  - mkdir build && cd build
  - cmake -DECVL_TESTS=ON -DECVL_BUILD_EDDL=ON -DECVL_DATASET=ON -DECVL_WITH_DICOM=ON -DECVL_WITH_OPENSLIDE=ON ..

script:
  - cmake --build . --config ${BUILD_TYPE} --parallel ${PROC}
  - bin/ECVL_TESTS

cache:
  directories:
    - ${DEPS_INSTALL_DIR}