language: cpp
env:
  global:
    - PROC=2
    - DEPS_BUILD_DIR="${HOME}/deps"
    - DEPS_INSTALL_DIR="${HOME}/cache"
    - BUILD_TYPE=Release
    - CMAKE_GENERATOR="Unix Makefiles"
    - OpenCV_DIR=${DEPS_INSTALL_DIR}/opencv
    - CMAKE_VERSION="3.13.5"
    - OPENCV_VERSION="3.4.12"
    - EDDL_VERSION="v0.8a"
jobs:
  # fast_finish: true
  include:
    - os: linux
      dist: bionic # Ubuntu 18.04
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env: MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-10
      env: MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-5.0
      env: MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-6.0
      env: MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-7
      env: MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-8
      env: MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-9
      env: MATRIX_EVAL="CC=clang-9 && CXX=clang++-9"
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-10
      env: MATRIX_EVAL="CC=clang-10 && CXX=clang++-10"
    - os: osx
      osx_image: xcode11.6
      env: 
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - CMAKE_GENERATOR="Xcode"
    - os: osx
      osx_image: xcode12.2
      env: 
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - CMAKE_GENERATOR="Xcode"
    - os: windows
      env: 
        - CMAKE_GENERATOR="Visual Studio 15 2017 Win64"
        - OpenCV_DIR=${DEPS_INSTALL_DIR}/opencv/x64/vc15/staticlib
    - os: windows
      env:
        - CMAKE_VERSION="3.14.7"
        - CMAKE_GENERATOR="Visual Studio 16 2019"
        - OpenCV_DIR=${DEPS_INSTALL_DIR}/opencv/x64/vc16/staticlib
        - MATRIX_EVAL="choco install visualstudio2019buildtools --package-parameters \"--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64\""
        

before_install:
  - mkdir -p ${DEPS_BUILD_DIR} && mkdir -p ${DEPS_INSTALL_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      export TRAVIS_OS=Linux
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      export TRAVIS_OS=Darwin
    elif [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then
      export TRAVIS_OS=Windows
    fi
  - eval "${MATRIX_EVAL}"
  - |
    if [ "$TRAVIS_OS" != "Windows" ]; then
      g++ --version
    fi
  - echo CMAKE_GENERATOR=${CMAKE_GENERATOR}

install:
  - |
    chmod ugo+x ci/travis/cmake.sh
    chmod ugo+x ci/travis/opencv.sh
    chmod ugo+x ci/travis/eddl.sh
  - |
    if [[ "$TRAVIS_OS" == "Linux" ]]; then
      sudo apt-get install -y openslide-tools
    elif [[ "$TRAVIS_OS" == "Darwin" ]]; then
      brew install openslide
    fi
  - |
    if [ "$TRAVIS_OS" != "Windows" ]; then
      source ci/travis/cmake.sh
    else 
      choco install cmake --version=$CMAKE_VERSION --force --allow-downgrade
    fi
  - cmake --version
  - source ci/travis/opencv.sh
  - source ci/travis/eddl.sh


before_script:
  - mkdir build && cd build
  - |
    cmake -G "${CMAKE_GENERATOR}" -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DECVL_TESTS=ON -DECVL_BUILD_EDDL=ON -DECVL_DATASET=ON -DECVL_WITH_DICOM=ON -DECVL_WITH_OPENSLIDE=ON -DECVL_GPU=OFF \
      -DProtobuf_INCLUDE_DIR=${Protobuf_INCLUDE_DIR} -DProtobuf_LIBRARY_RELEASE=${Protobuf_LIBRARY_RELEASE} \
      -DProtobuf_LIBRARY_DEBUG=${Protobuf_LIBRARY_DEBUG} -DProtobuf_PROTOC_EXECUTABLE=${Protobuf_PROTOC_EXECUTABLE} \
      ..

script:
  - cmake --build . --config ${BUILD_TYPE} --parallel ${PROC}
  - ctest -C ${BUILD_TYPE} -VV

cache:
  directories:
    - ${DEPS_INSTALL_DIR}